/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.data.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Listing extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Listing\",\"namespace\":\"com.data.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"listingUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"scrapId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lastScraped\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"experiencesOffered\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"thumbnailUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"mediumUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pictureUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"xlPictureUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostSince\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostLocation\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostResponceTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostAcceptanceRate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostIsSuperHost\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostThumbNamilUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostPictureUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostNeighbourhood\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostListingCount\",\"type\":\"int\"},{\"name\":\"hostTotalListingCount\",\"type\":\"int\"},{\"name\":\"hostVerification\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostHasProfilePic\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostIdentityVerified\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"street\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"neighbourhood\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"neighbourhoodCleansed\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"neighbourhoodGroupCleansed\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"city\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"state\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"market\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"smartLocation\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"countryCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"latitude\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"longitude\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"isLocationExact\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"propertyType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"roomType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"accommodates\",\"type\":\"int\"},{\"name\":\"bathrooms\",\"type\":\"double\"},{\"name\":\"bedrooms\",\"type\":\"int\"},{\"name\":\"bed\",\"type\":\"int\"},{\"name\":\"squareFeet\",\"type\":\"int\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"weeklyPrice\",\"type\":\"double\"},{\"name\":\"monthlyPrice\",\"type\":\"double\"},{\"name\":\"securityDeposit\",\"type\":\"double\"},{\"name\":\"cleaningFee\",\"type\":\"double\"},{\"name\":\"guestsIncluded\",\"type\":\"int\"},{\"name\":\"extraPeople\",\"type\":\"double\"},{\"name\":\"minimumNights\",\"type\":\"int\"},{\"name\":\"maximumNights\",\"type\":\"int\"},{\"name\":\"minimumMinimumNights\",\"type\":\"int\"},{\"name\":\"maximumMinimumNights\",\"type\":\"int\"},{\"name\":\"minimumMaximumNights\",\"type\":\"int\"},{\"name\":\"maximumMaximumNights\",\"type\":\"int\"},{\"name\":\"minimumNightsAvgNtm\",\"type\":\"double\"},{\"name\":\"maximumNightsAvgNtm\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String id;
  @Deprecated public java.lang.String listingUrl;
  @Deprecated public java.lang.String scrapId;
  @Deprecated public java.lang.String lastScraped;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String experiencesOffered;
  @Deprecated public java.lang.String thumbnailUrl;
  @Deprecated public java.lang.String mediumUrl;
  @Deprecated public java.lang.String pictureUrl;
  @Deprecated public java.lang.String xlPictureUrl;
  @Deprecated public java.lang.String hostId;
  @Deprecated public java.lang.String hostUrl;
  @Deprecated public java.lang.String hostName;
  @Deprecated public java.lang.String hostSince;
  @Deprecated public java.lang.String hostLocation;
  @Deprecated public java.lang.String hostResponceTime;
  @Deprecated public java.lang.String hostAcceptanceRate;
  @Deprecated public java.lang.String hostIsSuperHost;
  @Deprecated public java.lang.String hostThumbNamilUrl;
  @Deprecated public java.lang.String hostPictureUrl;
  @Deprecated public java.lang.String hostNeighbourhood;
  @Deprecated public int hostListingCount;
  @Deprecated public int hostTotalListingCount;
  @Deprecated public java.lang.String hostVerification;
  @Deprecated public java.lang.String hostHasProfilePic;
  @Deprecated public java.lang.String hostIdentityVerified;
  @Deprecated public java.lang.String street;
  @Deprecated public java.lang.String neighbourhood;
  @Deprecated public java.lang.String neighbourhoodCleansed;
  @Deprecated public java.lang.String neighbourhoodGroupCleansed;
  @Deprecated public java.lang.String city;
  @Deprecated public java.lang.String state;
  @Deprecated public java.lang.String market;
  @Deprecated public java.lang.String smartLocation;
  @Deprecated public java.lang.String countryCode;
  @Deprecated public java.lang.String country;
  @Deprecated public java.lang.String latitude;
  @Deprecated public java.lang.String longitude;
  @Deprecated public java.lang.String isLocationExact;
  @Deprecated public java.lang.String propertyType;
  @Deprecated public java.lang.String roomType;
  @Deprecated public int accommodates;
  @Deprecated public double bathrooms;
  @Deprecated public int bedrooms;
  @Deprecated public int bed;
  @Deprecated public int squareFeet;
  @Deprecated public double price;
  @Deprecated public double weeklyPrice;
  @Deprecated public double monthlyPrice;
  @Deprecated public double securityDeposit;
  @Deprecated public double cleaningFee;
  @Deprecated public int guestsIncluded;
  @Deprecated public double extraPeople;
  @Deprecated public int minimumNights;
  @Deprecated public int maximumNights;
  @Deprecated public int minimumMinimumNights;
  @Deprecated public int maximumMinimumNights;
  @Deprecated public int minimumMaximumNights;
  @Deprecated public int maximumMaximumNights;
  @Deprecated public double minimumNightsAvgNtm;
  @Deprecated public double maximumNightsAvgNtm;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Listing() {}

  /**
   * All-args constructor.
   */
  public Listing(java.lang.String id, java.lang.String listingUrl, java.lang.String scrapId, java.lang.String lastScraped, java.lang.String name, java.lang.String experiencesOffered, java.lang.String thumbnailUrl, java.lang.String mediumUrl, java.lang.String pictureUrl, java.lang.String xlPictureUrl, java.lang.String hostId, java.lang.String hostUrl, java.lang.String hostName, java.lang.String hostSince, java.lang.String hostLocation, java.lang.String hostResponceTime, java.lang.String hostAcceptanceRate, java.lang.String hostIsSuperHost, java.lang.String hostThumbNamilUrl, java.lang.String hostPictureUrl, java.lang.String hostNeighbourhood, java.lang.Integer hostListingCount, java.lang.Integer hostTotalListingCount, java.lang.String hostVerification, java.lang.String hostHasProfilePic, java.lang.String hostIdentityVerified, java.lang.String street, java.lang.String neighbourhood, java.lang.String neighbourhoodCleansed, java.lang.String neighbourhoodGroupCleansed, java.lang.String city, java.lang.String state, java.lang.String market, java.lang.String smartLocation, java.lang.String countryCode, java.lang.String country, java.lang.String latitude, java.lang.String longitude, java.lang.String isLocationExact, java.lang.String propertyType, java.lang.String roomType, java.lang.Integer accommodates, java.lang.Double bathrooms, java.lang.Integer bedrooms, java.lang.Integer bed, java.lang.Integer squareFeet, java.lang.Double price, java.lang.Double weeklyPrice, java.lang.Double monthlyPrice, java.lang.Double securityDeposit, java.lang.Double cleaningFee, java.lang.Integer guestsIncluded, java.lang.Double extraPeople, java.lang.Integer minimumNights, java.lang.Integer maximumNights, java.lang.Integer minimumMinimumNights, java.lang.Integer maximumMinimumNights, java.lang.Integer minimumMaximumNights, java.lang.Integer maximumMaximumNights, java.lang.Double minimumNightsAvgNtm, java.lang.Double maximumNightsAvgNtm) {
    this.id = id;
    this.listingUrl = listingUrl;
    this.scrapId = scrapId;
    this.lastScraped = lastScraped;
    this.name = name;
    this.experiencesOffered = experiencesOffered;
    this.thumbnailUrl = thumbnailUrl;
    this.mediumUrl = mediumUrl;
    this.pictureUrl = pictureUrl;
    this.xlPictureUrl = xlPictureUrl;
    this.hostId = hostId;
    this.hostUrl = hostUrl;
    this.hostName = hostName;
    this.hostSince = hostSince;
    this.hostLocation = hostLocation;
    this.hostResponceTime = hostResponceTime;
    this.hostAcceptanceRate = hostAcceptanceRate;
    this.hostIsSuperHost = hostIsSuperHost;
    this.hostThumbNamilUrl = hostThumbNamilUrl;
    this.hostPictureUrl = hostPictureUrl;
    this.hostNeighbourhood = hostNeighbourhood;
    this.hostListingCount = hostListingCount;
    this.hostTotalListingCount = hostTotalListingCount;
    this.hostVerification = hostVerification;
    this.hostHasProfilePic = hostHasProfilePic;
    this.hostIdentityVerified = hostIdentityVerified;
    this.street = street;
    this.neighbourhood = neighbourhood;
    this.neighbourhoodCleansed = neighbourhoodCleansed;
    this.neighbourhoodGroupCleansed = neighbourhoodGroupCleansed;
    this.city = city;
    this.state = state;
    this.market = market;
    this.smartLocation = smartLocation;
    this.countryCode = countryCode;
    this.country = country;
    this.latitude = latitude;
    this.longitude = longitude;
    this.isLocationExact = isLocationExact;
    this.propertyType = propertyType;
    this.roomType = roomType;
    this.accommodates = accommodates;
    this.bathrooms = bathrooms;
    this.bedrooms = bedrooms;
    this.bed = bed;
    this.squareFeet = squareFeet;
    this.price = price;
    this.weeklyPrice = weeklyPrice;
    this.monthlyPrice = monthlyPrice;
    this.securityDeposit = securityDeposit;
    this.cleaningFee = cleaningFee;
    this.guestsIncluded = guestsIncluded;
    this.extraPeople = extraPeople;
    this.minimumNights = minimumNights;
    this.maximumNights = maximumNights;
    this.minimumMinimumNights = minimumMinimumNights;
    this.maximumMinimumNights = maximumMinimumNights;
    this.minimumMaximumNights = minimumMaximumNights;
    this.maximumMaximumNights = maximumMaximumNights;
    this.minimumNightsAvgNtm = minimumNightsAvgNtm;
    this.maximumNightsAvgNtm = maximumNightsAvgNtm;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return listingUrl;
    case 2: return scrapId;
    case 3: return lastScraped;
    case 4: return name;
    case 5: return experiencesOffered;
    case 6: return thumbnailUrl;
    case 7: return mediumUrl;
    case 8: return pictureUrl;
    case 9: return xlPictureUrl;
    case 10: return hostId;
    case 11: return hostUrl;
    case 12: return hostName;
    case 13: return hostSince;
    case 14: return hostLocation;
    case 15: return hostResponceTime;
    case 16: return hostAcceptanceRate;
    case 17: return hostIsSuperHost;
    case 18: return hostThumbNamilUrl;
    case 19: return hostPictureUrl;
    case 20: return hostNeighbourhood;
    case 21: return hostListingCount;
    case 22: return hostTotalListingCount;
    case 23: return hostVerification;
    case 24: return hostHasProfilePic;
    case 25: return hostIdentityVerified;
    case 26: return street;
    case 27: return neighbourhood;
    case 28: return neighbourhoodCleansed;
    case 29: return neighbourhoodGroupCleansed;
    case 30: return city;
    case 31: return state;
    case 32: return market;
    case 33: return smartLocation;
    case 34: return countryCode;
    case 35: return country;
    case 36: return latitude;
    case 37: return longitude;
    case 38: return isLocationExact;
    case 39: return propertyType;
    case 40: return roomType;
    case 41: return accommodates;
    case 42: return bathrooms;
    case 43: return bedrooms;
    case 44: return bed;
    case 45: return squareFeet;
    case 46: return price;
    case 47: return weeklyPrice;
    case 48: return monthlyPrice;
    case 49: return securityDeposit;
    case 50: return cleaningFee;
    case 51: return guestsIncluded;
    case 52: return extraPeople;
    case 53: return minimumNights;
    case 54: return maximumNights;
    case 55: return minimumMinimumNights;
    case 56: return maximumMinimumNights;
    case 57: return minimumMaximumNights;
    case 58: return maximumMaximumNights;
    case 59: return minimumNightsAvgNtm;
    case 60: return maximumNightsAvgNtm;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: listingUrl = (java.lang.String)value$; break;
    case 2: scrapId = (java.lang.String)value$; break;
    case 3: lastScraped = (java.lang.String)value$; break;
    case 4: name = (java.lang.String)value$; break;
    case 5: experiencesOffered = (java.lang.String)value$; break;
    case 6: thumbnailUrl = (java.lang.String)value$; break;
    case 7: mediumUrl = (java.lang.String)value$; break;
    case 8: pictureUrl = (java.lang.String)value$; break;
    case 9: xlPictureUrl = (java.lang.String)value$; break;
    case 10: hostId = (java.lang.String)value$; break;
    case 11: hostUrl = (java.lang.String)value$; break;
    case 12: hostName = (java.lang.String)value$; break;
    case 13: hostSince = (java.lang.String)value$; break;
    case 14: hostLocation = (java.lang.String)value$; break;
    case 15: hostResponceTime = (java.lang.String)value$; break;
    case 16: hostAcceptanceRate = (java.lang.String)value$; break;
    case 17: hostIsSuperHost = (java.lang.String)value$; break;
    case 18: hostThumbNamilUrl = (java.lang.String)value$; break;
    case 19: hostPictureUrl = (java.lang.String)value$; break;
    case 20: hostNeighbourhood = (java.lang.String)value$; break;
    case 21: hostListingCount = (java.lang.Integer)value$; break;
    case 22: hostTotalListingCount = (java.lang.Integer)value$; break;
    case 23: hostVerification = (java.lang.String)value$; break;
    case 24: hostHasProfilePic = (java.lang.String)value$; break;
    case 25: hostIdentityVerified = (java.lang.String)value$; break;
    case 26: street = (java.lang.String)value$; break;
    case 27: neighbourhood = (java.lang.String)value$; break;
    case 28: neighbourhoodCleansed = (java.lang.String)value$; break;
    case 29: neighbourhoodGroupCleansed = (java.lang.String)value$; break;
    case 30: city = (java.lang.String)value$; break;
    case 31: state = (java.lang.String)value$; break;
    case 32: market = (java.lang.String)value$; break;
    case 33: smartLocation = (java.lang.String)value$; break;
    case 34: countryCode = (java.lang.String)value$; break;
    case 35: country = (java.lang.String)value$; break;
    case 36: latitude = (java.lang.String)value$; break;
    case 37: longitude = (java.lang.String)value$; break;
    case 38: isLocationExact = (java.lang.String)value$; break;
    case 39: propertyType = (java.lang.String)value$; break;
    case 40: roomType = (java.lang.String)value$; break;
    case 41: accommodates = (java.lang.Integer)value$; break;
    case 42: bathrooms = (java.lang.Double)value$; break;
    case 43: bedrooms = (java.lang.Integer)value$; break;
    case 44: bed = (java.lang.Integer)value$; break;
    case 45: squareFeet = (java.lang.Integer)value$; break;
    case 46: price = (java.lang.Double)value$; break;
    case 47: weeklyPrice = (java.lang.Double)value$; break;
    case 48: monthlyPrice = (java.lang.Double)value$; break;
    case 49: securityDeposit = (java.lang.Double)value$; break;
    case 50: cleaningFee = (java.lang.Double)value$; break;
    case 51: guestsIncluded = (java.lang.Integer)value$; break;
    case 52: extraPeople = (java.lang.Double)value$; break;
    case 53: minimumNights = (java.lang.Integer)value$; break;
    case 54: maximumNights = (java.lang.Integer)value$; break;
    case 55: minimumMinimumNights = (java.lang.Integer)value$; break;
    case 56: maximumMinimumNights = (java.lang.Integer)value$; break;
    case 57: minimumMaximumNights = (java.lang.Integer)value$; break;
    case 58: maximumMaximumNights = (java.lang.Integer)value$; break;
    case 59: minimumNightsAvgNtm = (java.lang.Double)value$; break;
    case 60: maximumNightsAvgNtm = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'listingUrl' field.
   */
  public java.lang.String getListingUrl() {
    return listingUrl;
  }

  /**
   * Sets the value of the 'listingUrl' field.
   * @param value the value to set.
   */
  public void setListingUrl(java.lang.String value) {
    this.listingUrl = value;
  }

  /**
   * Gets the value of the 'scrapId' field.
   */
  public java.lang.String getScrapId() {
    return scrapId;
  }

  /**
   * Sets the value of the 'scrapId' field.
   * @param value the value to set.
   */
  public void setScrapId(java.lang.String value) {
    this.scrapId = value;
  }

  /**
   * Gets the value of the 'lastScraped' field.
   */
  public java.lang.String getLastScraped() {
    return lastScraped;
  }

  /**
   * Sets the value of the 'lastScraped' field.
   * @param value the value to set.
   */
  public void setLastScraped(java.lang.String value) {
    this.lastScraped = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'experiencesOffered' field.
   */
  public java.lang.String getExperiencesOffered() {
    return experiencesOffered;
  }

  /**
   * Sets the value of the 'experiencesOffered' field.
   * @param value the value to set.
   */
  public void setExperiencesOffered(java.lang.String value) {
    this.experiencesOffered = value;
  }

  /**
   * Gets the value of the 'thumbnailUrl' field.
   */
  public java.lang.String getThumbnailUrl() {
    return thumbnailUrl;
  }

  /**
   * Sets the value of the 'thumbnailUrl' field.
   * @param value the value to set.
   */
  public void setThumbnailUrl(java.lang.String value) {
    this.thumbnailUrl = value;
  }

  /**
   * Gets the value of the 'mediumUrl' field.
   */
  public java.lang.String getMediumUrl() {
    return mediumUrl;
  }

  /**
   * Sets the value of the 'mediumUrl' field.
   * @param value the value to set.
   */
  public void setMediumUrl(java.lang.String value) {
    this.mediumUrl = value;
  }

  /**
   * Gets the value of the 'pictureUrl' field.
   */
  public java.lang.String getPictureUrl() {
    return pictureUrl;
  }

  /**
   * Sets the value of the 'pictureUrl' field.
   * @param value the value to set.
   */
  public void setPictureUrl(java.lang.String value) {
    this.pictureUrl = value;
  }

  /**
   * Gets the value of the 'xlPictureUrl' field.
   */
  public java.lang.String getXlPictureUrl() {
    return xlPictureUrl;
  }

  /**
   * Sets the value of the 'xlPictureUrl' field.
   * @param value the value to set.
   */
  public void setXlPictureUrl(java.lang.String value) {
    this.xlPictureUrl = value;
  }

  /**
   * Gets the value of the 'hostId' field.
   */
  public java.lang.String getHostId() {
    return hostId;
  }

  /**
   * Sets the value of the 'hostId' field.
   * @param value the value to set.
   */
  public void setHostId(java.lang.String value) {
    this.hostId = value;
  }

  /**
   * Gets the value of the 'hostUrl' field.
   */
  public java.lang.String getHostUrl() {
    return hostUrl;
  }

  /**
   * Sets the value of the 'hostUrl' field.
   * @param value the value to set.
   */
  public void setHostUrl(java.lang.String value) {
    this.hostUrl = value;
  }

  /**
   * Gets the value of the 'hostName' field.
   */
  public java.lang.String getHostName() {
    return hostName;
  }

  /**
   * Sets the value of the 'hostName' field.
   * @param value the value to set.
   */
  public void setHostName(java.lang.String value) {
    this.hostName = value;
  }

  /**
   * Gets the value of the 'hostSince' field.
   */
  public java.lang.String getHostSince() {
    return hostSince;
  }

  /**
   * Sets the value of the 'hostSince' field.
   * @param value the value to set.
   */
  public void setHostSince(java.lang.String value) {
    this.hostSince = value;
  }

  /**
   * Gets the value of the 'hostLocation' field.
   */
  public java.lang.String getHostLocation() {
    return hostLocation;
  }

  /**
   * Sets the value of the 'hostLocation' field.
   * @param value the value to set.
   */
  public void setHostLocation(java.lang.String value) {
    this.hostLocation = value;
  }

  /**
   * Gets the value of the 'hostResponceTime' field.
   */
  public java.lang.String getHostResponceTime() {
    return hostResponceTime;
  }

  /**
   * Sets the value of the 'hostResponceTime' field.
   * @param value the value to set.
   */
  public void setHostResponceTime(java.lang.String value) {
    this.hostResponceTime = value;
  }

  /**
   * Gets the value of the 'hostAcceptanceRate' field.
   */
  public java.lang.String getHostAcceptanceRate() {
    return hostAcceptanceRate;
  }

  /**
   * Sets the value of the 'hostAcceptanceRate' field.
   * @param value the value to set.
   */
  public void setHostAcceptanceRate(java.lang.String value) {
    this.hostAcceptanceRate = value;
  }

  /**
   * Gets the value of the 'hostIsSuperHost' field.
   */
  public java.lang.String getHostIsSuperHost() {
    return hostIsSuperHost;
  }

  /**
   * Sets the value of the 'hostIsSuperHost' field.
   * @param value the value to set.
   */
  public void setHostIsSuperHost(java.lang.String value) {
    this.hostIsSuperHost = value;
  }

  /**
   * Gets the value of the 'hostThumbNamilUrl' field.
   */
  public java.lang.String getHostThumbNamilUrl() {
    return hostThumbNamilUrl;
  }

  /**
   * Sets the value of the 'hostThumbNamilUrl' field.
   * @param value the value to set.
   */
  public void setHostThumbNamilUrl(java.lang.String value) {
    this.hostThumbNamilUrl = value;
  }

  /**
   * Gets the value of the 'hostPictureUrl' field.
   */
  public java.lang.String getHostPictureUrl() {
    return hostPictureUrl;
  }

  /**
   * Sets the value of the 'hostPictureUrl' field.
   * @param value the value to set.
   */
  public void setHostPictureUrl(java.lang.String value) {
    this.hostPictureUrl = value;
  }

  /**
   * Gets the value of the 'hostNeighbourhood' field.
   */
  public java.lang.String getHostNeighbourhood() {
    return hostNeighbourhood;
  }

  /**
   * Sets the value of the 'hostNeighbourhood' field.
   * @param value the value to set.
   */
  public void setHostNeighbourhood(java.lang.String value) {
    this.hostNeighbourhood = value;
  }

  /**
   * Gets the value of the 'hostListingCount' field.
   */
  public java.lang.Integer getHostListingCount() {
    return hostListingCount;
  }

  /**
   * Sets the value of the 'hostListingCount' field.
   * @param value the value to set.
   */
  public void setHostListingCount(java.lang.Integer value) {
    this.hostListingCount = value;
  }

  /**
   * Gets the value of the 'hostTotalListingCount' field.
   */
  public java.lang.Integer getHostTotalListingCount() {
    return hostTotalListingCount;
  }

  /**
   * Sets the value of the 'hostTotalListingCount' field.
   * @param value the value to set.
   */
  public void setHostTotalListingCount(java.lang.Integer value) {
    this.hostTotalListingCount = value;
  }

  /**
   * Gets the value of the 'hostVerification' field.
   */
  public java.lang.String getHostVerification() {
    return hostVerification;
  }

  /**
   * Sets the value of the 'hostVerification' field.
   * @param value the value to set.
   */
  public void setHostVerification(java.lang.String value) {
    this.hostVerification = value;
  }

  /**
   * Gets the value of the 'hostHasProfilePic' field.
   */
  public java.lang.String getHostHasProfilePic() {
    return hostHasProfilePic;
  }

  /**
   * Sets the value of the 'hostHasProfilePic' field.
   * @param value the value to set.
   */
  public void setHostHasProfilePic(java.lang.String value) {
    this.hostHasProfilePic = value;
  }

  /**
   * Gets the value of the 'hostIdentityVerified' field.
   */
  public java.lang.String getHostIdentityVerified() {
    return hostIdentityVerified;
  }

  /**
   * Sets the value of the 'hostIdentityVerified' field.
   * @param value the value to set.
   */
  public void setHostIdentityVerified(java.lang.String value) {
    this.hostIdentityVerified = value;
  }

  /**
   * Gets the value of the 'street' field.
   */
  public java.lang.String getStreet() {
    return street;
  }

  /**
   * Sets the value of the 'street' field.
   * @param value the value to set.
   */
  public void setStreet(java.lang.String value) {
    this.street = value;
  }

  /**
   * Gets the value of the 'neighbourhood' field.
   */
  public java.lang.String getNeighbourhood() {
    return neighbourhood;
  }

  /**
   * Sets the value of the 'neighbourhood' field.
   * @param value the value to set.
   */
  public void setNeighbourhood(java.lang.String value) {
    this.neighbourhood = value;
  }

  /**
   * Gets the value of the 'neighbourhoodCleansed' field.
   */
  public java.lang.String getNeighbourhoodCleansed() {
    return neighbourhoodCleansed;
  }

  /**
   * Sets the value of the 'neighbourhoodCleansed' field.
   * @param value the value to set.
   */
  public void setNeighbourhoodCleansed(java.lang.String value) {
    this.neighbourhoodCleansed = value;
  }

  /**
   * Gets the value of the 'neighbourhoodGroupCleansed' field.
   */
  public java.lang.String getNeighbourhoodGroupCleansed() {
    return neighbourhoodGroupCleansed;
  }

  /**
   * Sets the value of the 'neighbourhoodGroupCleansed' field.
   * @param value the value to set.
   */
  public void setNeighbourhoodGroupCleansed(java.lang.String value) {
    this.neighbourhoodGroupCleansed = value;
  }

  /**
   * Gets the value of the 'city' field.
   */
  public java.lang.String getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.String value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.String value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'market' field.
   */
  public java.lang.String getMarket() {
    return market;
  }

  /**
   * Sets the value of the 'market' field.
   * @param value the value to set.
   */
  public void setMarket(java.lang.String value) {
    this.market = value;
  }

  /**
   * Gets the value of the 'smartLocation' field.
   */
  public java.lang.String getSmartLocation() {
    return smartLocation;
  }

  /**
   * Sets the value of the 'smartLocation' field.
   * @param value the value to set.
   */
  public void setSmartLocation(java.lang.String value) {
    this.smartLocation = value;
  }

  /**
   * Gets the value of the 'countryCode' field.
   */
  public java.lang.String getCountryCode() {
    return countryCode;
  }

  /**
   * Sets the value of the 'countryCode' field.
   * @param value the value to set.
   */
  public void setCountryCode(java.lang.String value) {
    this.countryCode = value;
  }

  /**
   * Gets the value of the 'country' field.
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.String value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   */
  public java.lang.String getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.String value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   */
  public java.lang.String getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.String value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'isLocationExact' field.
   */
  public java.lang.String getIsLocationExact() {
    return isLocationExact;
  }

  /**
   * Sets the value of the 'isLocationExact' field.
   * @param value the value to set.
   */
  public void setIsLocationExact(java.lang.String value) {
    this.isLocationExact = value;
  }

  /**
   * Gets the value of the 'propertyType' field.
   */
  public java.lang.String getPropertyType() {
    return propertyType;
  }

  /**
   * Sets the value of the 'propertyType' field.
   * @param value the value to set.
   */
  public void setPropertyType(java.lang.String value) {
    this.propertyType = value;
  }

  /**
   * Gets the value of the 'roomType' field.
   */
  public java.lang.String getRoomType() {
    return roomType;
  }

  /**
   * Sets the value of the 'roomType' field.
   * @param value the value to set.
   */
  public void setRoomType(java.lang.String value) {
    this.roomType = value;
  }

  /**
   * Gets the value of the 'accommodates' field.
   */
  public java.lang.Integer getAccommodates() {
    return accommodates;
  }

  /**
   * Sets the value of the 'accommodates' field.
   * @param value the value to set.
   */
  public void setAccommodates(java.lang.Integer value) {
    this.accommodates = value;
  }

  /**
   * Gets the value of the 'bathrooms' field.
   */
  public java.lang.Double getBathrooms() {
    return bathrooms;
  }

  /**
   * Sets the value of the 'bathrooms' field.
   * @param value the value to set.
   */
  public void setBathrooms(java.lang.Double value) {
    this.bathrooms = value;
  }

  /**
   * Gets the value of the 'bedrooms' field.
   */
  public java.lang.Integer getBedrooms() {
    return bedrooms;
  }

  /**
   * Sets the value of the 'bedrooms' field.
   * @param value the value to set.
   */
  public void setBedrooms(java.lang.Integer value) {
    this.bedrooms = value;
  }

  /**
   * Gets the value of the 'bed' field.
   */
  public java.lang.Integer getBed() {
    return bed;
  }

  /**
   * Sets the value of the 'bed' field.
   * @param value the value to set.
   */
  public void setBed(java.lang.Integer value) {
    this.bed = value;
  }

  /**
   * Gets the value of the 'squareFeet' field.
   */
  public java.lang.Integer getSquareFeet() {
    return squareFeet;
  }

  /**
   * Sets the value of the 'squareFeet' field.
   * @param value the value to set.
   */
  public void setSquareFeet(java.lang.Integer value) {
    this.squareFeet = value;
  }

  /**
   * Gets the value of the 'price' field.
   */
  public java.lang.Double getPrice() {
    return price;
  }

  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.lang.Double value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'weeklyPrice' field.
   */
  public java.lang.Double getWeeklyPrice() {
    return weeklyPrice;
  }

  /**
   * Sets the value of the 'weeklyPrice' field.
   * @param value the value to set.
   */
  public void setWeeklyPrice(java.lang.Double value) {
    this.weeklyPrice = value;
  }

  /**
   * Gets the value of the 'monthlyPrice' field.
   */
  public java.lang.Double getMonthlyPrice() {
    return monthlyPrice;
  }

  /**
   * Sets the value of the 'monthlyPrice' field.
   * @param value the value to set.
   */
  public void setMonthlyPrice(java.lang.Double value) {
    this.monthlyPrice = value;
  }

  /**
   * Gets the value of the 'securityDeposit' field.
   */
  public java.lang.Double getSecurityDeposit() {
    return securityDeposit;
  }

  /**
   * Sets the value of the 'securityDeposit' field.
   * @param value the value to set.
   */
  public void setSecurityDeposit(java.lang.Double value) {
    this.securityDeposit = value;
  }

  /**
   * Gets the value of the 'cleaningFee' field.
   */
  public java.lang.Double getCleaningFee() {
    return cleaningFee;
  }

  /**
   * Sets the value of the 'cleaningFee' field.
   * @param value the value to set.
   */
  public void setCleaningFee(java.lang.Double value) {
    this.cleaningFee = value;
  }

  /**
   * Gets the value of the 'guestsIncluded' field.
   */
  public java.lang.Integer getGuestsIncluded() {
    return guestsIncluded;
  }

  /**
   * Sets the value of the 'guestsIncluded' field.
   * @param value the value to set.
   */
  public void setGuestsIncluded(java.lang.Integer value) {
    this.guestsIncluded = value;
  }

  /**
   * Gets the value of the 'extraPeople' field.
   */
  public java.lang.Double getExtraPeople() {
    return extraPeople;
  }

  /**
   * Sets the value of the 'extraPeople' field.
   * @param value the value to set.
   */
  public void setExtraPeople(java.lang.Double value) {
    this.extraPeople = value;
  }

  /**
   * Gets the value of the 'minimumNights' field.
   */
  public java.lang.Integer getMinimumNights() {
    return minimumNights;
  }

  /**
   * Sets the value of the 'minimumNights' field.
   * @param value the value to set.
   */
  public void setMinimumNights(java.lang.Integer value) {
    this.minimumNights = value;
  }

  /**
   * Gets the value of the 'maximumNights' field.
   */
  public java.lang.Integer getMaximumNights() {
    return maximumNights;
  }

  /**
   * Sets the value of the 'maximumNights' field.
   * @param value the value to set.
   */
  public void setMaximumNights(java.lang.Integer value) {
    this.maximumNights = value;
  }

  /**
   * Gets the value of the 'minimumMinimumNights' field.
   */
  public java.lang.Integer getMinimumMinimumNights() {
    return minimumMinimumNights;
  }

  /**
   * Sets the value of the 'minimumMinimumNights' field.
   * @param value the value to set.
   */
  public void setMinimumMinimumNights(java.lang.Integer value) {
    this.minimumMinimumNights = value;
  }

  /**
   * Gets the value of the 'maximumMinimumNights' field.
   */
  public java.lang.Integer getMaximumMinimumNights() {
    return maximumMinimumNights;
  }

  /**
   * Sets the value of the 'maximumMinimumNights' field.
   * @param value the value to set.
   */
  public void setMaximumMinimumNights(java.lang.Integer value) {
    this.maximumMinimumNights = value;
  }

  /**
   * Gets the value of the 'minimumMaximumNights' field.
   */
  public java.lang.Integer getMinimumMaximumNights() {
    return minimumMaximumNights;
  }

  /**
   * Sets the value of the 'minimumMaximumNights' field.
   * @param value the value to set.
   */
  public void setMinimumMaximumNights(java.lang.Integer value) {
    this.minimumMaximumNights = value;
  }

  /**
   * Gets the value of the 'maximumMaximumNights' field.
   */
  public java.lang.Integer getMaximumMaximumNights() {
    return maximumMaximumNights;
  }

  /**
   * Sets the value of the 'maximumMaximumNights' field.
   * @param value the value to set.
   */
  public void setMaximumMaximumNights(java.lang.Integer value) {
    this.maximumMaximumNights = value;
  }

  /**
   * Gets the value of the 'minimumNightsAvgNtm' field.
   */
  public java.lang.Double getMinimumNightsAvgNtm() {
    return minimumNightsAvgNtm;
  }

  /**
   * Sets the value of the 'minimumNightsAvgNtm' field.
   * @param value the value to set.
   */
  public void setMinimumNightsAvgNtm(java.lang.Double value) {
    this.minimumNightsAvgNtm = value;
  }

  /**
   * Gets the value of the 'maximumNightsAvgNtm' field.
   */
  public java.lang.Double getMaximumNightsAvgNtm() {
    return maximumNightsAvgNtm;
  }

  /**
   * Sets the value of the 'maximumNightsAvgNtm' field.
   * @param value the value to set.
   */
  public void setMaximumNightsAvgNtm(java.lang.Double value) {
    this.maximumNightsAvgNtm = value;
  }

  /** Creates a new Listing RecordBuilder */
  public static com.data.model.Listing.Builder newBuilder() {
    return new com.data.model.Listing.Builder();
  }
  
  /** Creates a new Listing RecordBuilder by copying an existing Builder */
  public static com.data.model.Listing.Builder newBuilder(com.data.model.Listing.Builder other) {
    return new com.data.model.Listing.Builder(other);
  }
  
  /** Creates a new Listing RecordBuilder by copying an existing Listing instance */
  public static com.data.model.Listing.Builder newBuilder(com.data.model.Listing other) {
    return new com.data.model.Listing.Builder(other);
  }
  
  /**
   * RecordBuilder for Listing instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Listing>
    implements org.apache.avro.data.RecordBuilder<Listing> {

    private java.lang.String id;
    private java.lang.String listingUrl;
    private java.lang.String scrapId;
    private java.lang.String lastScraped;
    private java.lang.String name;
    private java.lang.String experiencesOffered;
    private java.lang.String thumbnailUrl;
    private java.lang.String mediumUrl;
    private java.lang.String pictureUrl;
    private java.lang.String xlPictureUrl;
    private java.lang.String hostId;
    private java.lang.String hostUrl;
    private java.lang.String hostName;
    private java.lang.String hostSince;
    private java.lang.String hostLocation;
    private java.lang.String hostResponceTime;
    private java.lang.String hostAcceptanceRate;
    private java.lang.String hostIsSuperHost;
    private java.lang.String hostThumbNamilUrl;
    private java.lang.String hostPictureUrl;
    private java.lang.String hostNeighbourhood;
    private int hostListingCount;
    private int hostTotalListingCount;
    private java.lang.String hostVerification;
    private java.lang.String hostHasProfilePic;
    private java.lang.String hostIdentityVerified;
    private java.lang.String street;
    private java.lang.String neighbourhood;
    private java.lang.String neighbourhoodCleansed;
    private java.lang.String neighbourhoodGroupCleansed;
    private java.lang.String city;
    private java.lang.String state;
    private java.lang.String market;
    private java.lang.String smartLocation;
    private java.lang.String countryCode;
    private java.lang.String country;
    private java.lang.String latitude;
    private java.lang.String longitude;
    private java.lang.String isLocationExact;
    private java.lang.String propertyType;
    private java.lang.String roomType;
    private int accommodates;
    private double bathrooms;
    private int bedrooms;
    private int bed;
    private int squareFeet;
    private double price;
    private double weeklyPrice;
    private double monthlyPrice;
    private double securityDeposit;
    private double cleaningFee;
    private int guestsIncluded;
    private double extraPeople;
    private int minimumNights;
    private int maximumNights;
    private int minimumMinimumNights;
    private int maximumMinimumNights;
    private int minimumMaximumNights;
    private int maximumMaximumNights;
    private double minimumNightsAvgNtm;
    private double maximumNightsAvgNtm;

    /** Creates a new Builder */
    private Builder() {
      super(com.data.model.Listing.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.data.model.Listing.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.listingUrl)) {
        this.listingUrl = data().deepCopy(fields()[1].schema(), other.listingUrl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.scrapId)) {
        this.scrapId = data().deepCopy(fields()[2].schema(), other.scrapId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastScraped)) {
        this.lastScraped = data().deepCopy(fields()[3].schema(), other.lastScraped);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.experiencesOffered)) {
        this.experiencesOffered = data().deepCopy(fields()[5].schema(), other.experiencesOffered);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.thumbnailUrl)) {
        this.thumbnailUrl = data().deepCopy(fields()[6].schema(), other.thumbnailUrl);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.mediumUrl)) {
        this.mediumUrl = data().deepCopy(fields()[7].schema(), other.mediumUrl);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pictureUrl)) {
        this.pictureUrl = data().deepCopy(fields()[8].schema(), other.pictureUrl);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.xlPictureUrl)) {
        this.xlPictureUrl = data().deepCopy(fields()[9].schema(), other.xlPictureUrl);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.hostId)) {
        this.hostId = data().deepCopy(fields()[10].schema(), other.hostId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.hostUrl)) {
        this.hostUrl = data().deepCopy(fields()[11].schema(), other.hostUrl);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.hostName)) {
        this.hostName = data().deepCopy(fields()[12].schema(), other.hostName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.hostSince)) {
        this.hostSince = data().deepCopy(fields()[13].schema(), other.hostSince);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.hostLocation)) {
        this.hostLocation = data().deepCopy(fields()[14].schema(), other.hostLocation);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.hostResponceTime)) {
        this.hostResponceTime = data().deepCopy(fields()[15].schema(), other.hostResponceTime);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.hostAcceptanceRate)) {
        this.hostAcceptanceRate = data().deepCopy(fields()[16].schema(), other.hostAcceptanceRate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.hostIsSuperHost)) {
        this.hostIsSuperHost = data().deepCopy(fields()[17].schema(), other.hostIsSuperHost);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.hostThumbNamilUrl)) {
        this.hostThumbNamilUrl = data().deepCopy(fields()[18].schema(), other.hostThumbNamilUrl);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.hostPictureUrl)) {
        this.hostPictureUrl = data().deepCopy(fields()[19].schema(), other.hostPictureUrl);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.hostNeighbourhood)) {
        this.hostNeighbourhood = data().deepCopy(fields()[20].schema(), other.hostNeighbourhood);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.hostListingCount)) {
        this.hostListingCount = data().deepCopy(fields()[21].schema(), other.hostListingCount);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.hostTotalListingCount)) {
        this.hostTotalListingCount = data().deepCopy(fields()[22].schema(), other.hostTotalListingCount);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.hostVerification)) {
        this.hostVerification = data().deepCopy(fields()[23].schema(), other.hostVerification);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.hostHasProfilePic)) {
        this.hostHasProfilePic = data().deepCopy(fields()[24].schema(), other.hostHasProfilePic);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.hostIdentityVerified)) {
        this.hostIdentityVerified = data().deepCopy(fields()[25].schema(), other.hostIdentityVerified);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.street)) {
        this.street = data().deepCopy(fields()[26].schema(), other.street);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.neighbourhood)) {
        this.neighbourhood = data().deepCopy(fields()[27].schema(), other.neighbourhood);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.neighbourhoodCleansed)) {
        this.neighbourhoodCleansed = data().deepCopy(fields()[28].schema(), other.neighbourhoodCleansed);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.neighbourhoodGroupCleansed)) {
        this.neighbourhoodGroupCleansed = data().deepCopy(fields()[29].schema(), other.neighbourhoodGroupCleansed);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.city)) {
        this.city = data().deepCopy(fields()[30].schema(), other.city);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.state)) {
        this.state = data().deepCopy(fields()[31].schema(), other.state);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.market)) {
        this.market = data().deepCopy(fields()[32].schema(), other.market);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.smartLocation)) {
        this.smartLocation = data().deepCopy(fields()[33].schema(), other.smartLocation);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[34].schema(), other.countryCode);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.country)) {
        this.country = data().deepCopy(fields()[35].schema(), other.country);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.latitude)) {
        this.latitude = data().deepCopy(fields()[36].schema(), other.latitude);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.longitude)) {
        this.longitude = data().deepCopy(fields()[37].schema(), other.longitude);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.isLocationExact)) {
        this.isLocationExact = data().deepCopy(fields()[38].schema(), other.isLocationExact);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.propertyType)) {
        this.propertyType = data().deepCopy(fields()[39].schema(), other.propertyType);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.roomType)) {
        this.roomType = data().deepCopy(fields()[40].schema(), other.roomType);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.accommodates)) {
        this.accommodates = data().deepCopy(fields()[41].schema(), other.accommodates);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.bathrooms)) {
        this.bathrooms = data().deepCopy(fields()[42].schema(), other.bathrooms);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.bedrooms)) {
        this.bedrooms = data().deepCopy(fields()[43].schema(), other.bedrooms);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.bed)) {
        this.bed = data().deepCopy(fields()[44].schema(), other.bed);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.squareFeet)) {
        this.squareFeet = data().deepCopy(fields()[45].schema(), other.squareFeet);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.price)) {
        this.price = data().deepCopy(fields()[46].schema(), other.price);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.weeklyPrice)) {
        this.weeklyPrice = data().deepCopy(fields()[47].schema(), other.weeklyPrice);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.monthlyPrice)) {
        this.monthlyPrice = data().deepCopy(fields()[48].schema(), other.monthlyPrice);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.securityDeposit)) {
        this.securityDeposit = data().deepCopy(fields()[49].schema(), other.securityDeposit);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.cleaningFee)) {
        this.cleaningFee = data().deepCopy(fields()[50].schema(), other.cleaningFee);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.guestsIncluded)) {
        this.guestsIncluded = data().deepCopy(fields()[51].schema(), other.guestsIncluded);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.extraPeople)) {
        this.extraPeople = data().deepCopy(fields()[52].schema(), other.extraPeople);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.minimumNights)) {
        this.minimumNights = data().deepCopy(fields()[53].schema(), other.minimumNights);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.maximumNights)) {
        this.maximumNights = data().deepCopy(fields()[54].schema(), other.maximumNights);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.minimumMinimumNights)) {
        this.minimumMinimumNights = data().deepCopy(fields()[55].schema(), other.minimumMinimumNights);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.maximumMinimumNights)) {
        this.maximumMinimumNights = data().deepCopy(fields()[56].schema(), other.maximumMinimumNights);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.minimumMaximumNights)) {
        this.minimumMaximumNights = data().deepCopy(fields()[57].schema(), other.minimumMaximumNights);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.maximumMaximumNights)) {
        this.maximumMaximumNights = data().deepCopy(fields()[58].schema(), other.maximumMaximumNights);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.minimumNightsAvgNtm)) {
        this.minimumNightsAvgNtm = data().deepCopy(fields()[59].schema(), other.minimumNightsAvgNtm);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.maximumNightsAvgNtm)) {
        this.maximumNightsAvgNtm = data().deepCopy(fields()[60].schema(), other.maximumNightsAvgNtm);
        fieldSetFlags()[60] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Listing instance */
    private Builder(com.data.model.Listing other) {
            super(com.data.model.Listing.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.listingUrl)) {
        this.listingUrl = data().deepCopy(fields()[1].schema(), other.listingUrl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.scrapId)) {
        this.scrapId = data().deepCopy(fields()[2].schema(), other.scrapId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastScraped)) {
        this.lastScraped = data().deepCopy(fields()[3].schema(), other.lastScraped);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.experiencesOffered)) {
        this.experiencesOffered = data().deepCopy(fields()[5].schema(), other.experiencesOffered);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.thumbnailUrl)) {
        this.thumbnailUrl = data().deepCopy(fields()[6].schema(), other.thumbnailUrl);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.mediumUrl)) {
        this.mediumUrl = data().deepCopy(fields()[7].schema(), other.mediumUrl);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pictureUrl)) {
        this.pictureUrl = data().deepCopy(fields()[8].schema(), other.pictureUrl);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.xlPictureUrl)) {
        this.xlPictureUrl = data().deepCopy(fields()[9].schema(), other.xlPictureUrl);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.hostId)) {
        this.hostId = data().deepCopy(fields()[10].schema(), other.hostId);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.hostUrl)) {
        this.hostUrl = data().deepCopy(fields()[11].schema(), other.hostUrl);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.hostName)) {
        this.hostName = data().deepCopy(fields()[12].schema(), other.hostName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.hostSince)) {
        this.hostSince = data().deepCopy(fields()[13].schema(), other.hostSince);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.hostLocation)) {
        this.hostLocation = data().deepCopy(fields()[14].schema(), other.hostLocation);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.hostResponceTime)) {
        this.hostResponceTime = data().deepCopy(fields()[15].schema(), other.hostResponceTime);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.hostAcceptanceRate)) {
        this.hostAcceptanceRate = data().deepCopy(fields()[16].schema(), other.hostAcceptanceRate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.hostIsSuperHost)) {
        this.hostIsSuperHost = data().deepCopy(fields()[17].schema(), other.hostIsSuperHost);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.hostThumbNamilUrl)) {
        this.hostThumbNamilUrl = data().deepCopy(fields()[18].schema(), other.hostThumbNamilUrl);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.hostPictureUrl)) {
        this.hostPictureUrl = data().deepCopy(fields()[19].schema(), other.hostPictureUrl);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.hostNeighbourhood)) {
        this.hostNeighbourhood = data().deepCopy(fields()[20].schema(), other.hostNeighbourhood);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.hostListingCount)) {
        this.hostListingCount = data().deepCopy(fields()[21].schema(), other.hostListingCount);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.hostTotalListingCount)) {
        this.hostTotalListingCount = data().deepCopy(fields()[22].schema(), other.hostTotalListingCount);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.hostVerification)) {
        this.hostVerification = data().deepCopy(fields()[23].schema(), other.hostVerification);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.hostHasProfilePic)) {
        this.hostHasProfilePic = data().deepCopy(fields()[24].schema(), other.hostHasProfilePic);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.hostIdentityVerified)) {
        this.hostIdentityVerified = data().deepCopy(fields()[25].schema(), other.hostIdentityVerified);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.street)) {
        this.street = data().deepCopy(fields()[26].schema(), other.street);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.neighbourhood)) {
        this.neighbourhood = data().deepCopy(fields()[27].schema(), other.neighbourhood);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.neighbourhoodCleansed)) {
        this.neighbourhoodCleansed = data().deepCopy(fields()[28].schema(), other.neighbourhoodCleansed);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.neighbourhoodGroupCleansed)) {
        this.neighbourhoodGroupCleansed = data().deepCopy(fields()[29].schema(), other.neighbourhoodGroupCleansed);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.city)) {
        this.city = data().deepCopy(fields()[30].schema(), other.city);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.state)) {
        this.state = data().deepCopy(fields()[31].schema(), other.state);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.market)) {
        this.market = data().deepCopy(fields()[32].schema(), other.market);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.smartLocation)) {
        this.smartLocation = data().deepCopy(fields()[33].schema(), other.smartLocation);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[34].schema(), other.countryCode);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.country)) {
        this.country = data().deepCopy(fields()[35].schema(), other.country);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.latitude)) {
        this.latitude = data().deepCopy(fields()[36].schema(), other.latitude);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.longitude)) {
        this.longitude = data().deepCopy(fields()[37].schema(), other.longitude);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.isLocationExact)) {
        this.isLocationExact = data().deepCopy(fields()[38].schema(), other.isLocationExact);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.propertyType)) {
        this.propertyType = data().deepCopy(fields()[39].schema(), other.propertyType);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.roomType)) {
        this.roomType = data().deepCopy(fields()[40].schema(), other.roomType);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.accommodates)) {
        this.accommodates = data().deepCopy(fields()[41].schema(), other.accommodates);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.bathrooms)) {
        this.bathrooms = data().deepCopy(fields()[42].schema(), other.bathrooms);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.bedrooms)) {
        this.bedrooms = data().deepCopy(fields()[43].schema(), other.bedrooms);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.bed)) {
        this.bed = data().deepCopy(fields()[44].schema(), other.bed);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.squareFeet)) {
        this.squareFeet = data().deepCopy(fields()[45].schema(), other.squareFeet);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.price)) {
        this.price = data().deepCopy(fields()[46].schema(), other.price);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.weeklyPrice)) {
        this.weeklyPrice = data().deepCopy(fields()[47].schema(), other.weeklyPrice);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.monthlyPrice)) {
        this.monthlyPrice = data().deepCopy(fields()[48].schema(), other.monthlyPrice);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.securityDeposit)) {
        this.securityDeposit = data().deepCopy(fields()[49].schema(), other.securityDeposit);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.cleaningFee)) {
        this.cleaningFee = data().deepCopy(fields()[50].schema(), other.cleaningFee);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.guestsIncluded)) {
        this.guestsIncluded = data().deepCopy(fields()[51].schema(), other.guestsIncluded);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.extraPeople)) {
        this.extraPeople = data().deepCopy(fields()[52].schema(), other.extraPeople);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.minimumNights)) {
        this.minimumNights = data().deepCopy(fields()[53].schema(), other.minimumNights);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.maximumNights)) {
        this.maximumNights = data().deepCopy(fields()[54].schema(), other.maximumNights);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.minimumMinimumNights)) {
        this.minimumMinimumNights = data().deepCopy(fields()[55].schema(), other.minimumMinimumNights);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.maximumMinimumNights)) {
        this.maximumMinimumNights = data().deepCopy(fields()[56].schema(), other.maximumMinimumNights);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.minimumMaximumNights)) {
        this.minimumMaximumNights = data().deepCopy(fields()[57].schema(), other.minimumMaximumNights);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.maximumMaximumNights)) {
        this.maximumMaximumNights = data().deepCopy(fields()[58].schema(), other.maximumMaximumNights);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.minimumNightsAvgNtm)) {
        this.minimumNightsAvgNtm = data().deepCopy(fields()[59].schema(), other.minimumNightsAvgNtm);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.maximumNightsAvgNtm)) {
        this.maximumNightsAvgNtm = data().deepCopy(fields()[60].schema(), other.maximumNightsAvgNtm);
        fieldSetFlags()[60] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.data.model.Listing.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.data.model.Listing.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'listingUrl' field */
    public java.lang.String getListingUrl() {
      return listingUrl;
    }
    
    /** Sets the value of the 'listingUrl' field */
    public com.data.model.Listing.Builder setListingUrl(java.lang.String value) {
      validate(fields()[1], value);
      this.listingUrl = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'listingUrl' field has been set */
    public boolean hasListingUrl() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'listingUrl' field */
    public com.data.model.Listing.Builder clearListingUrl() {
      listingUrl = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'scrapId' field */
    public java.lang.String getScrapId() {
      return scrapId;
    }
    
    /** Sets the value of the 'scrapId' field */
    public com.data.model.Listing.Builder setScrapId(java.lang.String value) {
      validate(fields()[2], value);
      this.scrapId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'scrapId' field has been set */
    public boolean hasScrapId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'scrapId' field */
    public com.data.model.Listing.Builder clearScrapId() {
      scrapId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'lastScraped' field */
    public java.lang.String getLastScraped() {
      return lastScraped;
    }
    
    /** Sets the value of the 'lastScraped' field */
    public com.data.model.Listing.Builder setLastScraped(java.lang.String value) {
      validate(fields()[3], value);
      this.lastScraped = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'lastScraped' field has been set */
    public boolean hasLastScraped() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'lastScraped' field */
    public com.data.model.Listing.Builder clearLastScraped() {
      lastScraped = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.data.model.Listing.Builder setName(java.lang.String value) {
      validate(fields()[4], value);
      this.name = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'name' field */
    public com.data.model.Listing.Builder clearName() {
      name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'experiencesOffered' field */
    public java.lang.String getExperiencesOffered() {
      return experiencesOffered;
    }
    
    /** Sets the value of the 'experiencesOffered' field */
    public com.data.model.Listing.Builder setExperiencesOffered(java.lang.String value) {
      validate(fields()[5], value);
      this.experiencesOffered = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'experiencesOffered' field has been set */
    public boolean hasExperiencesOffered() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'experiencesOffered' field */
    public com.data.model.Listing.Builder clearExperiencesOffered() {
      experiencesOffered = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'thumbnailUrl' field */
    public java.lang.String getThumbnailUrl() {
      return thumbnailUrl;
    }
    
    /** Sets the value of the 'thumbnailUrl' field */
    public com.data.model.Listing.Builder setThumbnailUrl(java.lang.String value) {
      validate(fields()[6], value);
      this.thumbnailUrl = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'thumbnailUrl' field has been set */
    public boolean hasThumbnailUrl() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'thumbnailUrl' field */
    public com.data.model.Listing.Builder clearThumbnailUrl() {
      thumbnailUrl = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'mediumUrl' field */
    public java.lang.String getMediumUrl() {
      return mediumUrl;
    }
    
    /** Sets the value of the 'mediumUrl' field */
    public com.data.model.Listing.Builder setMediumUrl(java.lang.String value) {
      validate(fields()[7], value);
      this.mediumUrl = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'mediumUrl' field has been set */
    public boolean hasMediumUrl() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'mediumUrl' field */
    public com.data.model.Listing.Builder clearMediumUrl() {
      mediumUrl = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'pictureUrl' field */
    public java.lang.String getPictureUrl() {
      return pictureUrl;
    }
    
    /** Sets the value of the 'pictureUrl' field */
    public com.data.model.Listing.Builder setPictureUrl(java.lang.String value) {
      validate(fields()[8], value);
      this.pictureUrl = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'pictureUrl' field has been set */
    public boolean hasPictureUrl() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'pictureUrl' field */
    public com.data.model.Listing.Builder clearPictureUrl() {
      pictureUrl = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'xlPictureUrl' field */
    public java.lang.String getXlPictureUrl() {
      return xlPictureUrl;
    }
    
    /** Sets the value of the 'xlPictureUrl' field */
    public com.data.model.Listing.Builder setXlPictureUrl(java.lang.String value) {
      validate(fields()[9], value);
      this.xlPictureUrl = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'xlPictureUrl' field has been set */
    public boolean hasXlPictureUrl() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'xlPictureUrl' field */
    public com.data.model.Listing.Builder clearXlPictureUrl() {
      xlPictureUrl = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'hostId' field */
    public java.lang.String getHostId() {
      return hostId;
    }
    
    /** Sets the value of the 'hostId' field */
    public com.data.model.Listing.Builder setHostId(java.lang.String value) {
      validate(fields()[10], value);
      this.hostId = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'hostId' field has been set */
    public boolean hasHostId() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'hostId' field */
    public com.data.model.Listing.Builder clearHostId() {
      hostId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'hostUrl' field */
    public java.lang.String getHostUrl() {
      return hostUrl;
    }
    
    /** Sets the value of the 'hostUrl' field */
    public com.data.model.Listing.Builder setHostUrl(java.lang.String value) {
      validate(fields()[11], value);
      this.hostUrl = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'hostUrl' field has been set */
    public boolean hasHostUrl() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'hostUrl' field */
    public com.data.model.Listing.Builder clearHostUrl() {
      hostUrl = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'hostName' field */
    public java.lang.String getHostName() {
      return hostName;
    }
    
    /** Sets the value of the 'hostName' field */
    public com.data.model.Listing.Builder setHostName(java.lang.String value) {
      validate(fields()[12], value);
      this.hostName = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'hostName' field has been set */
    public boolean hasHostName() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'hostName' field */
    public com.data.model.Listing.Builder clearHostName() {
      hostName = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'hostSince' field */
    public java.lang.String getHostSince() {
      return hostSince;
    }
    
    /** Sets the value of the 'hostSince' field */
    public com.data.model.Listing.Builder setHostSince(java.lang.String value) {
      validate(fields()[13], value);
      this.hostSince = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'hostSince' field has been set */
    public boolean hasHostSince() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'hostSince' field */
    public com.data.model.Listing.Builder clearHostSince() {
      hostSince = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'hostLocation' field */
    public java.lang.String getHostLocation() {
      return hostLocation;
    }
    
    /** Sets the value of the 'hostLocation' field */
    public com.data.model.Listing.Builder setHostLocation(java.lang.String value) {
      validate(fields()[14], value);
      this.hostLocation = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'hostLocation' field has been set */
    public boolean hasHostLocation() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'hostLocation' field */
    public com.data.model.Listing.Builder clearHostLocation() {
      hostLocation = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'hostResponceTime' field */
    public java.lang.String getHostResponceTime() {
      return hostResponceTime;
    }
    
    /** Sets the value of the 'hostResponceTime' field */
    public com.data.model.Listing.Builder setHostResponceTime(java.lang.String value) {
      validate(fields()[15], value);
      this.hostResponceTime = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'hostResponceTime' field has been set */
    public boolean hasHostResponceTime() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'hostResponceTime' field */
    public com.data.model.Listing.Builder clearHostResponceTime() {
      hostResponceTime = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'hostAcceptanceRate' field */
    public java.lang.String getHostAcceptanceRate() {
      return hostAcceptanceRate;
    }
    
    /** Sets the value of the 'hostAcceptanceRate' field */
    public com.data.model.Listing.Builder setHostAcceptanceRate(java.lang.String value) {
      validate(fields()[16], value);
      this.hostAcceptanceRate = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'hostAcceptanceRate' field has been set */
    public boolean hasHostAcceptanceRate() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'hostAcceptanceRate' field */
    public com.data.model.Listing.Builder clearHostAcceptanceRate() {
      hostAcceptanceRate = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'hostIsSuperHost' field */
    public java.lang.String getHostIsSuperHost() {
      return hostIsSuperHost;
    }
    
    /** Sets the value of the 'hostIsSuperHost' field */
    public com.data.model.Listing.Builder setHostIsSuperHost(java.lang.String value) {
      validate(fields()[17], value);
      this.hostIsSuperHost = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'hostIsSuperHost' field has been set */
    public boolean hasHostIsSuperHost() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'hostIsSuperHost' field */
    public com.data.model.Listing.Builder clearHostIsSuperHost() {
      hostIsSuperHost = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'hostThumbNamilUrl' field */
    public java.lang.String getHostThumbNamilUrl() {
      return hostThumbNamilUrl;
    }
    
    /** Sets the value of the 'hostThumbNamilUrl' field */
    public com.data.model.Listing.Builder setHostThumbNamilUrl(java.lang.String value) {
      validate(fields()[18], value);
      this.hostThumbNamilUrl = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'hostThumbNamilUrl' field has been set */
    public boolean hasHostThumbNamilUrl() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'hostThumbNamilUrl' field */
    public com.data.model.Listing.Builder clearHostThumbNamilUrl() {
      hostThumbNamilUrl = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'hostPictureUrl' field */
    public java.lang.String getHostPictureUrl() {
      return hostPictureUrl;
    }
    
    /** Sets the value of the 'hostPictureUrl' field */
    public com.data.model.Listing.Builder setHostPictureUrl(java.lang.String value) {
      validate(fields()[19], value);
      this.hostPictureUrl = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'hostPictureUrl' field has been set */
    public boolean hasHostPictureUrl() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'hostPictureUrl' field */
    public com.data.model.Listing.Builder clearHostPictureUrl() {
      hostPictureUrl = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'hostNeighbourhood' field */
    public java.lang.String getHostNeighbourhood() {
      return hostNeighbourhood;
    }
    
    /** Sets the value of the 'hostNeighbourhood' field */
    public com.data.model.Listing.Builder setHostNeighbourhood(java.lang.String value) {
      validate(fields()[20], value);
      this.hostNeighbourhood = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'hostNeighbourhood' field has been set */
    public boolean hasHostNeighbourhood() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'hostNeighbourhood' field */
    public com.data.model.Listing.Builder clearHostNeighbourhood() {
      hostNeighbourhood = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'hostListingCount' field */
    public java.lang.Integer getHostListingCount() {
      return hostListingCount;
    }
    
    /** Sets the value of the 'hostListingCount' field */
    public com.data.model.Listing.Builder setHostListingCount(int value) {
      validate(fields()[21], value);
      this.hostListingCount = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'hostListingCount' field has been set */
    public boolean hasHostListingCount() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'hostListingCount' field */
    public com.data.model.Listing.Builder clearHostListingCount() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'hostTotalListingCount' field */
    public java.lang.Integer getHostTotalListingCount() {
      return hostTotalListingCount;
    }
    
    /** Sets the value of the 'hostTotalListingCount' field */
    public com.data.model.Listing.Builder setHostTotalListingCount(int value) {
      validate(fields()[22], value);
      this.hostTotalListingCount = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'hostTotalListingCount' field has been set */
    public boolean hasHostTotalListingCount() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'hostTotalListingCount' field */
    public com.data.model.Listing.Builder clearHostTotalListingCount() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'hostVerification' field */
    public java.lang.String getHostVerification() {
      return hostVerification;
    }
    
    /** Sets the value of the 'hostVerification' field */
    public com.data.model.Listing.Builder setHostVerification(java.lang.String value) {
      validate(fields()[23], value);
      this.hostVerification = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'hostVerification' field has been set */
    public boolean hasHostVerification() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'hostVerification' field */
    public com.data.model.Listing.Builder clearHostVerification() {
      hostVerification = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'hostHasProfilePic' field */
    public java.lang.String getHostHasProfilePic() {
      return hostHasProfilePic;
    }
    
    /** Sets the value of the 'hostHasProfilePic' field */
    public com.data.model.Listing.Builder setHostHasProfilePic(java.lang.String value) {
      validate(fields()[24], value);
      this.hostHasProfilePic = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'hostHasProfilePic' field has been set */
    public boolean hasHostHasProfilePic() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'hostHasProfilePic' field */
    public com.data.model.Listing.Builder clearHostHasProfilePic() {
      hostHasProfilePic = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'hostIdentityVerified' field */
    public java.lang.String getHostIdentityVerified() {
      return hostIdentityVerified;
    }
    
    /** Sets the value of the 'hostIdentityVerified' field */
    public com.data.model.Listing.Builder setHostIdentityVerified(java.lang.String value) {
      validate(fields()[25], value);
      this.hostIdentityVerified = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'hostIdentityVerified' field has been set */
    public boolean hasHostIdentityVerified() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'hostIdentityVerified' field */
    public com.data.model.Listing.Builder clearHostIdentityVerified() {
      hostIdentityVerified = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'street' field */
    public java.lang.String getStreet() {
      return street;
    }
    
    /** Sets the value of the 'street' field */
    public com.data.model.Listing.Builder setStreet(java.lang.String value) {
      validate(fields()[26], value);
      this.street = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'street' field has been set */
    public boolean hasStreet() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'street' field */
    public com.data.model.Listing.Builder clearStreet() {
      street = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'neighbourhood' field */
    public java.lang.String getNeighbourhood() {
      return neighbourhood;
    }
    
    /** Sets the value of the 'neighbourhood' field */
    public com.data.model.Listing.Builder setNeighbourhood(java.lang.String value) {
      validate(fields()[27], value);
      this.neighbourhood = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'neighbourhood' field has been set */
    public boolean hasNeighbourhood() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'neighbourhood' field */
    public com.data.model.Listing.Builder clearNeighbourhood() {
      neighbourhood = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'neighbourhoodCleansed' field */
    public java.lang.String getNeighbourhoodCleansed() {
      return neighbourhoodCleansed;
    }
    
    /** Sets the value of the 'neighbourhoodCleansed' field */
    public com.data.model.Listing.Builder setNeighbourhoodCleansed(java.lang.String value) {
      validate(fields()[28], value);
      this.neighbourhoodCleansed = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'neighbourhoodCleansed' field has been set */
    public boolean hasNeighbourhoodCleansed() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'neighbourhoodCleansed' field */
    public com.data.model.Listing.Builder clearNeighbourhoodCleansed() {
      neighbourhoodCleansed = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'neighbourhoodGroupCleansed' field */
    public java.lang.String getNeighbourhoodGroupCleansed() {
      return neighbourhoodGroupCleansed;
    }
    
    /** Sets the value of the 'neighbourhoodGroupCleansed' field */
    public com.data.model.Listing.Builder setNeighbourhoodGroupCleansed(java.lang.String value) {
      validate(fields()[29], value);
      this.neighbourhoodGroupCleansed = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'neighbourhoodGroupCleansed' field has been set */
    public boolean hasNeighbourhoodGroupCleansed() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'neighbourhoodGroupCleansed' field */
    public com.data.model.Listing.Builder clearNeighbourhoodGroupCleansed() {
      neighbourhoodGroupCleansed = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'city' field */
    public java.lang.String getCity() {
      return city;
    }
    
    /** Sets the value of the 'city' field */
    public com.data.model.Listing.Builder setCity(java.lang.String value) {
      validate(fields()[30], value);
      this.city = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'city' field has been set */
    public boolean hasCity() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'city' field */
    public com.data.model.Listing.Builder clearCity() {
      city = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'state' field */
    public java.lang.String getState() {
      return state;
    }
    
    /** Sets the value of the 'state' field */
    public com.data.model.Listing.Builder setState(java.lang.String value) {
      validate(fields()[31], value);
      this.state = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'state' field has been set */
    public boolean hasState() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'state' field */
    public com.data.model.Listing.Builder clearState() {
      state = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'market' field */
    public java.lang.String getMarket() {
      return market;
    }
    
    /** Sets the value of the 'market' field */
    public com.data.model.Listing.Builder setMarket(java.lang.String value) {
      validate(fields()[32], value);
      this.market = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'market' field has been set */
    public boolean hasMarket() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'market' field */
    public com.data.model.Listing.Builder clearMarket() {
      market = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'smartLocation' field */
    public java.lang.String getSmartLocation() {
      return smartLocation;
    }
    
    /** Sets the value of the 'smartLocation' field */
    public com.data.model.Listing.Builder setSmartLocation(java.lang.String value) {
      validate(fields()[33], value);
      this.smartLocation = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'smartLocation' field has been set */
    public boolean hasSmartLocation() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'smartLocation' field */
    public com.data.model.Listing.Builder clearSmartLocation() {
      smartLocation = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'countryCode' field */
    public java.lang.String getCountryCode() {
      return countryCode;
    }
    
    /** Sets the value of the 'countryCode' field */
    public com.data.model.Listing.Builder setCountryCode(java.lang.String value) {
      validate(fields()[34], value);
      this.countryCode = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'countryCode' field has been set */
    public boolean hasCountryCode() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'countryCode' field */
    public com.data.model.Listing.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.String getCountry() {
      return country;
    }
    
    /** Sets the value of the 'country' field */
    public com.data.model.Listing.Builder setCountry(java.lang.String value) {
      validate(fields()[35], value);
      this.country = value;
      fieldSetFlags()[35] = true;
      return this; 
    }
    
    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[35];
    }
    
    /** Clears the value of the 'country' field */
    public com.data.model.Listing.Builder clearCountry() {
      country = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'latitude' field */
    public java.lang.String getLatitude() {
      return latitude;
    }
    
    /** Sets the value of the 'latitude' field */
    public com.data.model.Listing.Builder setLatitude(java.lang.String value) {
      validate(fields()[36], value);
      this.latitude = value;
      fieldSetFlags()[36] = true;
      return this; 
    }
    
    /** Checks whether the 'latitude' field has been set */
    public boolean hasLatitude() {
      return fieldSetFlags()[36];
    }
    
    /** Clears the value of the 'latitude' field */
    public com.data.model.Listing.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'longitude' field */
    public java.lang.String getLongitude() {
      return longitude;
    }
    
    /** Sets the value of the 'longitude' field */
    public com.data.model.Listing.Builder setLongitude(java.lang.String value) {
      validate(fields()[37], value);
      this.longitude = value;
      fieldSetFlags()[37] = true;
      return this; 
    }
    
    /** Checks whether the 'longitude' field has been set */
    public boolean hasLongitude() {
      return fieldSetFlags()[37];
    }
    
    /** Clears the value of the 'longitude' field */
    public com.data.model.Listing.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /** Gets the value of the 'isLocationExact' field */
    public java.lang.String getIsLocationExact() {
      return isLocationExact;
    }
    
    /** Sets the value of the 'isLocationExact' field */
    public com.data.model.Listing.Builder setIsLocationExact(java.lang.String value) {
      validate(fields()[38], value);
      this.isLocationExact = value;
      fieldSetFlags()[38] = true;
      return this; 
    }
    
    /** Checks whether the 'isLocationExact' field has been set */
    public boolean hasIsLocationExact() {
      return fieldSetFlags()[38];
    }
    
    /** Clears the value of the 'isLocationExact' field */
    public com.data.model.Listing.Builder clearIsLocationExact() {
      isLocationExact = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /** Gets the value of the 'propertyType' field */
    public java.lang.String getPropertyType() {
      return propertyType;
    }
    
    /** Sets the value of the 'propertyType' field */
    public com.data.model.Listing.Builder setPropertyType(java.lang.String value) {
      validate(fields()[39], value);
      this.propertyType = value;
      fieldSetFlags()[39] = true;
      return this; 
    }
    
    /** Checks whether the 'propertyType' field has been set */
    public boolean hasPropertyType() {
      return fieldSetFlags()[39];
    }
    
    /** Clears the value of the 'propertyType' field */
    public com.data.model.Listing.Builder clearPropertyType() {
      propertyType = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /** Gets the value of the 'roomType' field */
    public java.lang.String getRoomType() {
      return roomType;
    }
    
    /** Sets the value of the 'roomType' field */
    public com.data.model.Listing.Builder setRoomType(java.lang.String value) {
      validate(fields()[40], value);
      this.roomType = value;
      fieldSetFlags()[40] = true;
      return this; 
    }
    
    /** Checks whether the 'roomType' field has been set */
    public boolean hasRoomType() {
      return fieldSetFlags()[40];
    }
    
    /** Clears the value of the 'roomType' field */
    public com.data.model.Listing.Builder clearRoomType() {
      roomType = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /** Gets the value of the 'accommodates' field */
    public java.lang.Integer getAccommodates() {
      return accommodates;
    }
    
    /** Sets the value of the 'accommodates' field */
    public com.data.model.Listing.Builder setAccommodates(int value) {
      validate(fields()[41], value);
      this.accommodates = value;
      fieldSetFlags()[41] = true;
      return this; 
    }
    
    /** Checks whether the 'accommodates' field has been set */
    public boolean hasAccommodates() {
      return fieldSetFlags()[41];
    }
    
    /** Clears the value of the 'accommodates' field */
    public com.data.model.Listing.Builder clearAccommodates() {
      fieldSetFlags()[41] = false;
      return this;
    }

    /** Gets the value of the 'bathrooms' field */
    public java.lang.Double getBathrooms() {
      return bathrooms;
    }
    
    /** Sets the value of the 'bathrooms' field */
    public com.data.model.Listing.Builder setBathrooms(double value) {
      validate(fields()[42], value);
      this.bathrooms = value;
      fieldSetFlags()[42] = true;
      return this; 
    }
    
    /** Checks whether the 'bathrooms' field has been set */
    public boolean hasBathrooms() {
      return fieldSetFlags()[42];
    }
    
    /** Clears the value of the 'bathrooms' field */
    public com.data.model.Listing.Builder clearBathrooms() {
      fieldSetFlags()[42] = false;
      return this;
    }

    /** Gets the value of the 'bedrooms' field */
    public java.lang.Integer getBedrooms() {
      return bedrooms;
    }
    
    /** Sets the value of the 'bedrooms' field */
    public com.data.model.Listing.Builder setBedrooms(int value) {
      validate(fields()[43], value);
      this.bedrooms = value;
      fieldSetFlags()[43] = true;
      return this; 
    }
    
    /** Checks whether the 'bedrooms' field has been set */
    public boolean hasBedrooms() {
      return fieldSetFlags()[43];
    }
    
    /** Clears the value of the 'bedrooms' field */
    public com.data.model.Listing.Builder clearBedrooms() {
      fieldSetFlags()[43] = false;
      return this;
    }

    /** Gets the value of the 'bed' field */
    public java.lang.Integer getBed() {
      return bed;
    }
    
    /** Sets the value of the 'bed' field */
    public com.data.model.Listing.Builder setBed(int value) {
      validate(fields()[44], value);
      this.bed = value;
      fieldSetFlags()[44] = true;
      return this; 
    }
    
    /** Checks whether the 'bed' field has been set */
    public boolean hasBed() {
      return fieldSetFlags()[44];
    }
    
    /** Clears the value of the 'bed' field */
    public com.data.model.Listing.Builder clearBed() {
      fieldSetFlags()[44] = false;
      return this;
    }

    /** Gets the value of the 'squareFeet' field */
    public java.lang.Integer getSquareFeet() {
      return squareFeet;
    }
    
    /** Sets the value of the 'squareFeet' field */
    public com.data.model.Listing.Builder setSquareFeet(int value) {
      validate(fields()[45], value);
      this.squareFeet = value;
      fieldSetFlags()[45] = true;
      return this; 
    }
    
    /** Checks whether the 'squareFeet' field has been set */
    public boolean hasSquareFeet() {
      return fieldSetFlags()[45];
    }
    
    /** Clears the value of the 'squareFeet' field */
    public com.data.model.Listing.Builder clearSquareFeet() {
      fieldSetFlags()[45] = false;
      return this;
    }

    /** Gets the value of the 'price' field */
    public java.lang.Double getPrice() {
      return price;
    }
    
    /** Sets the value of the 'price' field */
    public com.data.model.Listing.Builder setPrice(double value) {
      validate(fields()[46], value);
      this.price = value;
      fieldSetFlags()[46] = true;
      return this; 
    }
    
    /** Checks whether the 'price' field has been set */
    public boolean hasPrice() {
      return fieldSetFlags()[46];
    }
    
    /** Clears the value of the 'price' field */
    public com.data.model.Listing.Builder clearPrice() {
      fieldSetFlags()[46] = false;
      return this;
    }

    /** Gets the value of the 'weeklyPrice' field */
    public java.lang.Double getWeeklyPrice() {
      return weeklyPrice;
    }
    
    /** Sets the value of the 'weeklyPrice' field */
    public com.data.model.Listing.Builder setWeeklyPrice(double value) {
      validate(fields()[47], value);
      this.weeklyPrice = value;
      fieldSetFlags()[47] = true;
      return this; 
    }
    
    /** Checks whether the 'weeklyPrice' field has been set */
    public boolean hasWeeklyPrice() {
      return fieldSetFlags()[47];
    }
    
    /** Clears the value of the 'weeklyPrice' field */
    public com.data.model.Listing.Builder clearWeeklyPrice() {
      fieldSetFlags()[47] = false;
      return this;
    }

    /** Gets the value of the 'monthlyPrice' field */
    public java.lang.Double getMonthlyPrice() {
      return monthlyPrice;
    }
    
    /** Sets the value of the 'monthlyPrice' field */
    public com.data.model.Listing.Builder setMonthlyPrice(double value) {
      validate(fields()[48], value);
      this.monthlyPrice = value;
      fieldSetFlags()[48] = true;
      return this; 
    }
    
    /** Checks whether the 'monthlyPrice' field has been set */
    public boolean hasMonthlyPrice() {
      return fieldSetFlags()[48];
    }
    
    /** Clears the value of the 'monthlyPrice' field */
    public com.data.model.Listing.Builder clearMonthlyPrice() {
      fieldSetFlags()[48] = false;
      return this;
    }

    /** Gets the value of the 'securityDeposit' field */
    public java.lang.Double getSecurityDeposit() {
      return securityDeposit;
    }
    
    /** Sets the value of the 'securityDeposit' field */
    public com.data.model.Listing.Builder setSecurityDeposit(double value) {
      validate(fields()[49], value);
      this.securityDeposit = value;
      fieldSetFlags()[49] = true;
      return this; 
    }
    
    /** Checks whether the 'securityDeposit' field has been set */
    public boolean hasSecurityDeposit() {
      return fieldSetFlags()[49];
    }
    
    /** Clears the value of the 'securityDeposit' field */
    public com.data.model.Listing.Builder clearSecurityDeposit() {
      fieldSetFlags()[49] = false;
      return this;
    }

    /** Gets the value of the 'cleaningFee' field */
    public java.lang.Double getCleaningFee() {
      return cleaningFee;
    }
    
    /** Sets the value of the 'cleaningFee' field */
    public com.data.model.Listing.Builder setCleaningFee(double value) {
      validate(fields()[50], value);
      this.cleaningFee = value;
      fieldSetFlags()[50] = true;
      return this; 
    }
    
    /** Checks whether the 'cleaningFee' field has been set */
    public boolean hasCleaningFee() {
      return fieldSetFlags()[50];
    }
    
    /** Clears the value of the 'cleaningFee' field */
    public com.data.model.Listing.Builder clearCleaningFee() {
      fieldSetFlags()[50] = false;
      return this;
    }

    /** Gets the value of the 'guestsIncluded' field */
    public java.lang.Integer getGuestsIncluded() {
      return guestsIncluded;
    }
    
    /** Sets the value of the 'guestsIncluded' field */
    public com.data.model.Listing.Builder setGuestsIncluded(int value) {
      validate(fields()[51], value);
      this.guestsIncluded = value;
      fieldSetFlags()[51] = true;
      return this; 
    }
    
    /** Checks whether the 'guestsIncluded' field has been set */
    public boolean hasGuestsIncluded() {
      return fieldSetFlags()[51];
    }
    
    /** Clears the value of the 'guestsIncluded' field */
    public com.data.model.Listing.Builder clearGuestsIncluded() {
      fieldSetFlags()[51] = false;
      return this;
    }

    /** Gets the value of the 'extraPeople' field */
    public java.lang.Double getExtraPeople() {
      return extraPeople;
    }
    
    /** Sets the value of the 'extraPeople' field */
    public com.data.model.Listing.Builder setExtraPeople(double value) {
      validate(fields()[52], value);
      this.extraPeople = value;
      fieldSetFlags()[52] = true;
      return this; 
    }
    
    /** Checks whether the 'extraPeople' field has been set */
    public boolean hasExtraPeople() {
      return fieldSetFlags()[52];
    }
    
    /** Clears the value of the 'extraPeople' field */
    public com.data.model.Listing.Builder clearExtraPeople() {
      fieldSetFlags()[52] = false;
      return this;
    }

    /** Gets the value of the 'minimumNights' field */
    public java.lang.Integer getMinimumNights() {
      return minimumNights;
    }
    
    /** Sets the value of the 'minimumNights' field */
    public com.data.model.Listing.Builder setMinimumNights(int value) {
      validate(fields()[53], value);
      this.minimumNights = value;
      fieldSetFlags()[53] = true;
      return this; 
    }
    
    /** Checks whether the 'minimumNights' field has been set */
    public boolean hasMinimumNights() {
      return fieldSetFlags()[53];
    }
    
    /** Clears the value of the 'minimumNights' field */
    public com.data.model.Listing.Builder clearMinimumNights() {
      fieldSetFlags()[53] = false;
      return this;
    }

    /** Gets the value of the 'maximumNights' field */
    public java.lang.Integer getMaximumNights() {
      return maximumNights;
    }
    
    /** Sets the value of the 'maximumNights' field */
    public com.data.model.Listing.Builder setMaximumNights(int value) {
      validate(fields()[54], value);
      this.maximumNights = value;
      fieldSetFlags()[54] = true;
      return this; 
    }
    
    /** Checks whether the 'maximumNights' field has been set */
    public boolean hasMaximumNights() {
      return fieldSetFlags()[54];
    }
    
    /** Clears the value of the 'maximumNights' field */
    public com.data.model.Listing.Builder clearMaximumNights() {
      fieldSetFlags()[54] = false;
      return this;
    }

    /** Gets the value of the 'minimumMinimumNights' field */
    public java.lang.Integer getMinimumMinimumNights() {
      return minimumMinimumNights;
    }
    
    /** Sets the value of the 'minimumMinimumNights' field */
    public com.data.model.Listing.Builder setMinimumMinimumNights(int value) {
      validate(fields()[55], value);
      this.minimumMinimumNights = value;
      fieldSetFlags()[55] = true;
      return this; 
    }
    
    /** Checks whether the 'minimumMinimumNights' field has been set */
    public boolean hasMinimumMinimumNights() {
      return fieldSetFlags()[55];
    }
    
    /** Clears the value of the 'minimumMinimumNights' field */
    public com.data.model.Listing.Builder clearMinimumMinimumNights() {
      fieldSetFlags()[55] = false;
      return this;
    }

    /** Gets the value of the 'maximumMinimumNights' field */
    public java.lang.Integer getMaximumMinimumNights() {
      return maximumMinimumNights;
    }
    
    /** Sets the value of the 'maximumMinimumNights' field */
    public com.data.model.Listing.Builder setMaximumMinimumNights(int value) {
      validate(fields()[56], value);
      this.maximumMinimumNights = value;
      fieldSetFlags()[56] = true;
      return this; 
    }
    
    /** Checks whether the 'maximumMinimumNights' field has been set */
    public boolean hasMaximumMinimumNights() {
      return fieldSetFlags()[56];
    }
    
    /** Clears the value of the 'maximumMinimumNights' field */
    public com.data.model.Listing.Builder clearMaximumMinimumNights() {
      fieldSetFlags()[56] = false;
      return this;
    }

    /** Gets the value of the 'minimumMaximumNights' field */
    public java.lang.Integer getMinimumMaximumNights() {
      return minimumMaximumNights;
    }
    
    /** Sets the value of the 'minimumMaximumNights' field */
    public com.data.model.Listing.Builder setMinimumMaximumNights(int value) {
      validate(fields()[57], value);
      this.minimumMaximumNights = value;
      fieldSetFlags()[57] = true;
      return this; 
    }
    
    /** Checks whether the 'minimumMaximumNights' field has been set */
    public boolean hasMinimumMaximumNights() {
      return fieldSetFlags()[57];
    }
    
    /** Clears the value of the 'minimumMaximumNights' field */
    public com.data.model.Listing.Builder clearMinimumMaximumNights() {
      fieldSetFlags()[57] = false;
      return this;
    }

    /** Gets the value of the 'maximumMaximumNights' field */
    public java.lang.Integer getMaximumMaximumNights() {
      return maximumMaximumNights;
    }
    
    /** Sets the value of the 'maximumMaximumNights' field */
    public com.data.model.Listing.Builder setMaximumMaximumNights(int value) {
      validate(fields()[58], value);
      this.maximumMaximumNights = value;
      fieldSetFlags()[58] = true;
      return this; 
    }
    
    /** Checks whether the 'maximumMaximumNights' field has been set */
    public boolean hasMaximumMaximumNights() {
      return fieldSetFlags()[58];
    }
    
    /** Clears the value of the 'maximumMaximumNights' field */
    public com.data.model.Listing.Builder clearMaximumMaximumNights() {
      fieldSetFlags()[58] = false;
      return this;
    }

    /** Gets the value of the 'minimumNightsAvgNtm' field */
    public java.lang.Double getMinimumNightsAvgNtm() {
      return minimumNightsAvgNtm;
    }
    
    /** Sets the value of the 'minimumNightsAvgNtm' field */
    public com.data.model.Listing.Builder setMinimumNightsAvgNtm(double value) {
      validate(fields()[59], value);
      this.minimumNightsAvgNtm = value;
      fieldSetFlags()[59] = true;
      return this; 
    }
    
    /** Checks whether the 'minimumNightsAvgNtm' field has been set */
    public boolean hasMinimumNightsAvgNtm() {
      return fieldSetFlags()[59];
    }
    
    /** Clears the value of the 'minimumNightsAvgNtm' field */
    public com.data.model.Listing.Builder clearMinimumNightsAvgNtm() {
      fieldSetFlags()[59] = false;
      return this;
    }

    /** Gets the value of the 'maximumNightsAvgNtm' field */
    public java.lang.Double getMaximumNightsAvgNtm() {
      return maximumNightsAvgNtm;
    }
    
    /** Sets the value of the 'maximumNightsAvgNtm' field */
    public com.data.model.Listing.Builder setMaximumNightsAvgNtm(double value) {
      validate(fields()[60], value);
      this.maximumNightsAvgNtm = value;
      fieldSetFlags()[60] = true;
      return this; 
    }
    
    /** Checks whether the 'maximumNightsAvgNtm' field has been set */
    public boolean hasMaximumNightsAvgNtm() {
      return fieldSetFlags()[60];
    }
    
    /** Clears the value of the 'maximumNightsAvgNtm' field */
    public com.data.model.Listing.Builder clearMaximumNightsAvgNtm() {
      fieldSetFlags()[60] = false;
      return this;
    }

    @Override
    public Listing build() {
      try {
        Listing record = new Listing();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.listingUrl = fieldSetFlags()[1] ? this.listingUrl : (java.lang.String) defaultValue(fields()[1]);
        record.scrapId = fieldSetFlags()[2] ? this.scrapId : (java.lang.String) defaultValue(fields()[2]);
        record.lastScraped = fieldSetFlags()[3] ? this.lastScraped : (java.lang.String) defaultValue(fields()[3]);
        record.name = fieldSetFlags()[4] ? this.name : (java.lang.String) defaultValue(fields()[4]);
        record.experiencesOffered = fieldSetFlags()[5] ? this.experiencesOffered : (java.lang.String) defaultValue(fields()[5]);
        record.thumbnailUrl = fieldSetFlags()[6] ? this.thumbnailUrl : (java.lang.String) defaultValue(fields()[6]);
        record.mediumUrl = fieldSetFlags()[7] ? this.mediumUrl : (java.lang.String) defaultValue(fields()[7]);
        record.pictureUrl = fieldSetFlags()[8] ? this.pictureUrl : (java.lang.String) defaultValue(fields()[8]);
        record.xlPictureUrl = fieldSetFlags()[9] ? this.xlPictureUrl : (java.lang.String) defaultValue(fields()[9]);
        record.hostId = fieldSetFlags()[10] ? this.hostId : (java.lang.String) defaultValue(fields()[10]);
        record.hostUrl = fieldSetFlags()[11] ? this.hostUrl : (java.lang.String) defaultValue(fields()[11]);
        record.hostName = fieldSetFlags()[12] ? this.hostName : (java.lang.String) defaultValue(fields()[12]);
        record.hostSince = fieldSetFlags()[13] ? this.hostSince : (java.lang.String) defaultValue(fields()[13]);
        record.hostLocation = fieldSetFlags()[14] ? this.hostLocation : (java.lang.String) defaultValue(fields()[14]);
        record.hostResponceTime = fieldSetFlags()[15] ? this.hostResponceTime : (java.lang.String) defaultValue(fields()[15]);
        record.hostAcceptanceRate = fieldSetFlags()[16] ? this.hostAcceptanceRate : (java.lang.String) defaultValue(fields()[16]);
        record.hostIsSuperHost = fieldSetFlags()[17] ? this.hostIsSuperHost : (java.lang.String) defaultValue(fields()[17]);
        record.hostThumbNamilUrl = fieldSetFlags()[18] ? this.hostThumbNamilUrl : (java.lang.String) defaultValue(fields()[18]);
        record.hostPictureUrl = fieldSetFlags()[19] ? this.hostPictureUrl : (java.lang.String) defaultValue(fields()[19]);
        record.hostNeighbourhood = fieldSetFlags()[20] ? this.hostNeighbourhood : (java.lang.String) defaultValue(fields()[20]);
        record.hostListingCount = fieldSetFlags()[21] ? this.hostListingCount : (java.lang.Integer) defaultValue(fields()[21]);
        record.hostTotalListingCount = fieldSetFlags()[22] ? this.hostTotalListingCount : (java.lang.Integer) defaultValue(fields()[22]);
        record.hostVerification = fieldSetFlags()[23] ? this.hostVerification : (java.lang.String) defaultValue(fields()[23]);
        record.hostHasProfilePic = fieldSetFlags()[24] ? this.hostHasProfilePic : (java.lang.String) defaultValue(fields()[24]);
        record.hostIdentityVerified = fieldSetFlags()[25] ? this.hostIdentityVerified : (java.lang.String) defaultValue(fields()[25]);
        record.street = fieldSetFlags()[26] ? this.street : (java.lang.String) defaultValue(fields()[26]);
        record.neighbourhood = fieldSetFlags()[27] ? this.neighbourhood : (java.lang.String) defaultValue(fields()[27]);
        record.neighbourhoodCleansed = fieldSetFlags()[28] ? this.neighbourhoodCleansed : (java.lang.String) defaultValue(fields()[28]);
        record.neighbourhoodGroupCleansed = fieldSetFlags()[29] ? this.neighbourhoodGroupCleansed : (java.lang.String) defaultValue(fields()[29]);
        record.city = fieldSetFlags()[30] ? this.city : (java.lang.String) defaultValue(fields()[30]);
        record.state = fieldSetFlags()[31] ? this.state : (java.lang.String) defaultValue(fields()[31]);
        record.market = fieldSetFlags()[32] ? this.market : (java.lang.String) defaultValue(fields()[32]);
        record.smartLocation = fieldSetFlags()[33] ? this.smartLocation : (java.lang.String) defaultValue(fields()[33]);
        record.countryCode = fieldSetFlags()[34] ? this.countryCode : (java.lang.String) defaultValue(fields()[34]);
        record.country = fieldSetFlags()[35] ? this.country : (java.lang.String) defaultValue(fields()[35]);
        record.latitude = fieldSetFlags()[36] ? this.latitude : (java.lang.String) defaultValue(fields()[36]);
        record.longitude = fieldSetFlags()[37] ? this.longitude : (java.lang.String) defaultValue(fields()[37]);
        record.isLocationExact = fieldSetFlags()[38] ? this.isLocationExact : (java.lang.String) defaultValue(fields()[38]);
        record.propertyType = fieldSetFlags()[39] ? this.propertyType : (java.lang.String) defaultValue(fields()[39]);
        record.roomType = fieldSetFlags()[40] ? this.roomType : (java.lang.String) defaultValue(fields()[40]);
        record.accommodates = fieldSetFlags()[41] ? this.accommodates : (java.lang.Integer) defaultValue(fields()[41]);
        record.bathrooms = fieldSetFlags()[42] ? this.bathrooms : (java.lang.Double) defaultValue(fields()[42]);
        record.bedrooms = fieldSetFlags()[43] ? this.bedrooms : (java.lang.Integer) defaultValue(fields()[43]);
        record.bed = fieldSetFlags()[44] ? this.bed : (java.lang.Integer) defaultValue(fields()[44]);
        record.squareFeet = fieldSetFlags()[45] ? this.squareFeet : (java.lang.Integer) defaultValue(fields()[45]);
        record.price = fieldSetFlags()[46] ? this.price : (java.lang.Double) defaultValue(fields()[46]);
        record.weeklyPrice = fieldSetFlags()[47] ? this.weeklyPrice : (java.lang.Double) defaultValue(fields()[47]);
        record.monthlyPrice = fieldSetFlags()[48] ? this.monthlyPrice : (java.lang.Double) defaultValue(fields()[48]);
        record.securityDeposit = fieldSetFlags()[49] ? this.securityDeposit : (java.lang.Double) defaultValue(fields()[49]);
        record.cleaningFee = fieldSetFlags()[50] ? this.cleaningFee : (java.lang.Double) defaultValue(fields()[50]);
        record.guestsIncluded = fieldSetFlags()[51] ? this.guestsIncluded : (java.lang.Integer) defaultValue(fields()[51]);
        record.extraPeople = fieldSetFlags()[52] ? this.extraPeople : (java.lang.Double) defaultValue(fields()[52]);
        record.minimumNights = fieldSetFlags()[53] ? this.minimumNights : (java.lang.Integer) defaultValue(fields()[53]);
        record.maximumNights = fieldSetFlags()[54] ? this.maximumNights : (java.lang.Integer) defaultValue(fields()[54]);
        record.minimumMinimumNights = fieldSetFlags()[55] ? this.minimumMinimumNights : (java.lang.Integer) defaultValue(fields()[55]);
        record.maximumMinimumNights = fieldSetFlags()[56] ? this.maximumMinimumNights : (java.lang.Integer) defaultValue(fields()[56]);
        record.minimumMaximumNights = fieldSetFlags()[57] ? this.minimumMaximumNights : (java.lang.Integer) defaultValue(fields()[57]);
        record.maximumMaximumNights = fieldSetFlags()[58] ? this.maximumMaximumNights : (java.lang.Integer) defaultValue(fields()[58]);
        record.minimumNightsAvgNtm = fieldSetFlags()[59] ? this.minimumNightsAvgNtm : (java.lang.Double) defaultValue(fields()[59]);
        record.maximumNightsAvgNtm = fieldSetFlags()[60] ? this.maximumNightsAvgNtm : (java.lang.Double) defaultValue(fields()[60]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
