/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.data.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Analytic extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Analytic\",\"namespace\":\"com.data.model\",\"fields\":[{\"name\":\"listingId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"dataContainer\",\"type\":{\"type\":\"record\",\"name\":\"DataContainer\",\"fields\":[{\"name\":\"Listing\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Listing\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"listingUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"scrapId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lastScraped\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"experiencesOffered\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"thumbnailUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"mediumUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pictureUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"xlPictureUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostSince\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostLocation\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostResponceTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostAcceptanceRate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostIsSuperHost\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostThumbNamilUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostPictureUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostNeighbourhood\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostListingCount\",\"type\":\"int\"},{\"name\":\"hostTotalListingCount\",\"type\":\"int\"},{\"name\":\"hostVerification\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostHasProfilePic\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hostIdentityVerified\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"street\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"neighbourhood\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"neighbourhoodCleansed\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"neighbourhoodGroupCleansed\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"city\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"state\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"market\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"smartLocation\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"countryCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"latitude\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"longitude\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"isLocationExact\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"propertyType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"roomType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"accommodates\",\"type\":\"int\"},{\"name\":\"bathrooms\",\"type\":\"double\"},{\"name\":\"bedrooms\",\"type\":\"int\"},{\"name\":\"bed\",\"type\":\"int\"},{\"name\":\"squareFeet\",\"type\":\"int\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"weeklyPrice\",\"type\":\"double\"},{\"name\":\"monthlyPrice\",\"type\":\"double\"},{\"name\":\"securityDeposit\",\"type\":\"double\"},{\"name\":\"cleaningFee\",\"type\":\"double\"},{\"name\":\"guestsIncluded\",\"type\":\"int\"},{\"name\":\"extraPeople\",\"type\":\"double\"},{\"name\":\"minimumNights\",\"type\":\"int\"},{\"name\":\"maximumNights\",\"type\":\"int\"},{\"name\":\"minimumMinimumNights\",\"type\":\"int\"},{\"name\":\"maximumMinimumNights\",\"type\":\"int\"},{\"name\":\"minimumMaximumNights\",\"type\":\"int\"},{\"name\":\"maximumMaximumNights\",\"type\":\"int\"},{\"name\":\"minimumNightsAvgNtm\",\"type\":\"double\"},{\"name\":\"maximumNightsAvgNtm\",\"type\":\"double\"}]}}],\"doc\":\"Listing\",\"default\":null},{\"name\":\"Review\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Review\",\"fields\":[{\"name\":\"listingId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"date\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"reviewId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"reviewName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}],\"doc\":\"Review\",\"default\":null},{\"name\":\"Calendar\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Calendar\",\"fields\":[{\"name\":\"listingId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"date\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"available\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"price\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"adjusted_price\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"minimum_nights\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"maximum_nights\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}],\"doc\":\"Calendar\",\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String listingId;
  @Deprecated public com.data.model.DataContainer dataContainer;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Analytic() {}

  /**
   * All-args constructor.
   */
  public Analytic(java.lang.String listingId, com.data.model.DataContainer dataContainer) {
    this.listingId = listingId;
    this.dataContainer = dataContainer;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return listingId;
    case 1: return dataContainer;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: listingId = (java.lang.String)value$; break;
    case 1: dataContainer = (com.data.model.DataContainer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'listingId' field.
   */
  public java.lang.String getListingId() {
    return listingId;
  }

  /**
   * Sets the value of the 'listingId' field.
   * @param value the value to set.
   */
  public void setListingId(java.lang.String value) {
    this.listingId = value;
  }

  /**
   * Gets the value of the 'dataContainer' field.
   */
  public com.data.model.DataContainer getDataContainer() {
    return dataContainer;
  }

  /**
   * Sets the value of the 'dataContainer' field.
   * @param value the value to set.
   */
  public void setDataContainer(com.data.model.DataContainer value) {
    this.dataContainer = value;
  }

  /** Creates a new Analytic RecordBuilder */
  public static com.data.model.Analytic.Builder newBuilder() {
    return new com.data.model.Analytic.Builder();
  }
  
  /** Creates a new Analytic RecordBuilder by copying an existing Builder */
  public static com.data.model.Analytic.Builder newBuilder(com.data.model.Analytic.Builder other) {
    return new com.data.model.Analytic.Builder(other);
  }
  
  /** Creates a new Analytic RecordBuilder by copying an existing Analytic instance */
  public static com.data.model.Analytic.Builder newBuilder(com.data.model.Analytic other) {
    return new com.data.model.Analytic.Builder(other);
  }
  
  /**
   * RecordBuilder for Analytic instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Analytic>
    implements org.apache.avro.data.RecordBuilder<Analytic> {

    private java.lang.String listingId;
    private com.data.model.DataContainer dataContainer;

    /** Creates a new Builder */
    private Builder() {
      super(com.data.model.Analytic.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.data.model.Analytic.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.listingId)) {
        this.listingId = data().deepCopy(fields()[0].schema(), other.listingId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataContainer)) {
        this.dataContainer = data().deepCopy(fields()[1].schema(), other.dataContainer);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Analytic instance */
    private Builder(com.data.model.Analytic other) {
            super(com.data.model.Analytic.SCHEMA$);
      if (isValidValue(fields()[0], other.listingId)) {
        this.listingId = data().deepCopy(fields()[0].schema(), other.listingId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataContainer)) {
        this.dataContainer = data().deepCopy(fields()[1].schema(), other.dataContainer);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'listingId' field */
    public java.lang.String getListingId() {
      return listingId;
    }
    
    /** Sets the value of the 'listingId' field */
    public com.data.model.Analytic.Builder setListingId(java.lang.String value) {
      validate(fields()[0], value);
      this.listingId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'listingId' field has been set */
    public boolean hasListingId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'listingId' field */
    public com.data.model.Analytic.Builder clearListingId() {
      listingId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'dataContainer' field */
    public com.data.model.DataContainer getDataContainer() {
      return dataContainer;
    }
    
    /** Sets the value of the 'dataContainer' field */
    public com.data.model.Analytic.Builder setDataContainer(com.data.model.DataContainer value) {
      validate(fields()[1], value);
      this.dataContainer = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'dataContainer' field has been set */
    public boolean hasDataContainer() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'dataContainer' field */
    public com.data.model.Analytic.Builder clearDataContainer() {
      dataContainer = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Analytic build() {
      try {
        Analytic record = new Analytic();
        record.listingId = fieldSetFlags()[0] ? this.listingId : (java.lang.String) defaultValue(fields()[0]);
        record.dataContainer = fieldSetFlags()[1] ? this.dataContainer : (com.data.model.DataContainer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
